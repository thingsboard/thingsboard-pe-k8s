#
# Copyright Â© 2016-2020 The Thingsboard Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: tb-node
  namespace: thingsboard
spec:
  serviceName: tb-node
  replicas: 1
  selector:
    matchLabels:
      app: tb-node
  template:
    metadata:
      labels:
        app: tb-node
    spec:
      nodeSelector:
        role: main
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values:
                      - tb-node
              topologyKey: "kubernetes.io/hostname"
      securityContext:
        runAsUser: 799
        runAsNonRoot: true
        fsGroup: 799
      volumes:
        - name: tb-node-config
          configMap:
            name: tb-node-config
            items:
              - key: conf
                path:  thingsboard.conf
              - key: logback
                path:  logback.xml
        - name: tb-node-logs
          emptyDir: {}
        # Uncomment the following lines to enable two-way MQTTS
        #- name: tb-mqtts-config
        #  configMap:
        #    name: tb-mqtts-config
        #    items:
        #      - key: server.pem
        #        path:  server.pem
      containers:
      - name: server
        imagePullPolicy: Always
        image: thingsboard/tb-pe-node:4.0.2PE
        ports:
          - containerPort: 8080
            name: http
          - containerPort: 443
            name: https
          - containerPort: 1883
            name: mqtt
          - containerPort: 8883
            name: mqtts
          - containerPort: 5683
            name: coap
            protocol: UDP
          - containerPort: 5684
            name: coaps
            protocol: UDP
          - containerPort: 5685
            name: lwm2m
            protocol: UDP
          - containerPort: 5686
            name: lwm2ms
            protocol: UDP
          - containerPort: 5687
            name: lwm2m-bs
            protocol: UDP
          - containerPort: 5688
            name: lwm2ms-bs
            protocol: UDP
          - containerPort: 7070
            name: edge
        env:
          - name: TB_SERVICE_ID
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: TB_SERVICE_TYPE
            value: "monolith"
          - name: TB_QUEUE_TYPE
            value: "in-memory"
          - name: HTTP_LOG_CONTROLLER_ERROR_STACK_TRACE
            value: "false"
          - name: COAP_BIND_ADDRESS
            value: "0.0.0.0"
          - name: COAP_BIND_PORT
            value: "5683"
          - name: COAP_TIMEOUT
            value: "10000"
            # Uncomment the following lines to enable two-way MQTTS
            #- name: MQTT_SSL_ENABLED
            #  value: "true"
            #- name: MQTT_SSL_BIND_ADDRESS
            #  value: "0.0.0.0"
            #- name: MQTT_SSL_BIND_PORT
            #  value: "8883"
            #- name: MQTT_SSL_CREDENTIALS_TYPE
            #  value: "PEM"
            #- name: MQTT_SSL_PEM_CERT
            #  value: "/ssl-config/server.pem"
          - name: REPORTS_SERVER_ENDPOINT_URL
            value: "http://tb-web-report:8383"
          - name: TB_LICENSE_SECRET
            valueFrom:
              secretKeyRef:
                name: tb-license
                key: license-key
          - name: TB_LICENSE_INSTANCE_DATA_FILE
            value: "/data/instance-license-$(TB_SERVICE_ID).data"
        envFrom:
        - configMapRef:
            name: tb-node-db-config
        volumeMounts:
          - mountPath: /config
            name: tb-node-config
          - mountPath: /var/log/thingsboard
            name: tb-node-logs
          - name: tb-node-data
            mountPath: /data
            readOnly: false
          # Uncomment the following lines to enable two-way MQTTS
          #- mountPath: /ssl-config
          #  name: tb-mqtts-config
        readinessProbe:
          httpGet:
            path: /login
            port: http
        livenessProbe:
          httpGet:
            path: /login
            port: http
          initialDelaySeconds: 460
          timeoutSeconds: 10
      restartPolicy: Always
  volumeClaimTemplates:
    - metadata:
        name: tb-node-data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: tb-node
  namespace: thingsboard
spec:
  type: ClusterIP
  selector:
    app: tb-node
  ports:
    - port: 8080
      name: http
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tb-web-report
  namespace: thingsboard
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tb-web-report
  template:
    metadata:
      labels:
        app: tb-web-report
    spec:
      nodeSelector:
        role: main
      containers:
        - name: server
          imagePullPolicy: Always
          image: thingsboard/tb-pe-web-report:4.0.2PE
          ports:
            - containerPort: 8383
              name: http
          env:
            - name: HTTP_BIND_ADDRESS
              value: "0.0.0.0"
            - name: HTTP_BIND_PORT
              value: "8383"
            - name: LOGGER_LEVEL
              value: "info"
            - name: LOG_FOLDER
              value: "logs"
            - name: LOGGER_FILENAME
              value: "tb-web-report-%DATE%.log"
            - name: NODE_OPTIONS
              value: "--max-old-space-size=400"
            - name: DOCKER_MODE
              value: "true"
            - name: DEFAULT_PAGE_NAVIGATION_TIMEOUT
              value: "120000"
            - name: DASHBOARD_LOAD_WAIT_TIME
              value: "3000"
            - name: "USE_NEW_PAGE_FOR_REPORT"
              value: "true"
          readinessProbe:
            periodSeconds: 20
            tcpSocket:
              port: 8383
          livenessProbe:
            periodSeconds: 20
            tcpSocket:
              port: 8383
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: tb-web-report
  namespace: thingsboard
spec:
  type: ClusterIP
  selector:
    app: tb-web-report
  ports:
    - port: 8383
      name: http
